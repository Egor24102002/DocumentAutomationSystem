
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author PENZA
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        ReductButton = new javax.swing.JButton();
        type = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        number_search = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        search_by_number = new javax.swing.JButton();
        update = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "number", "data", "type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        addButton.setText("Добавить");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        ReductButton.setText("Посмотреть");
        ReductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReductButtonActionPerformed(evt);
            }
        });

        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EmployeeRecord", "LegalContract", "FinancialStatement" }));
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(number_search);

        jLabel1.setText("Поиск по номеру");

        search_by_number.setText("Найти");
        search_by_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_numberActionPerformed(evt);
            }
        });

        update.setText("Обновить");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ReductButton)))
                        .addGap(65, 236, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1))
                            .addComponent(search_by_number)
                            .addComponent(update))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search_by_number)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(update)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReductButton)
                    .addComponent(addButton))
                .addGap(66, 66, 66))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        NewDocument newDocument = new NewDocument();
         newDocument.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        newDocument.setVisible(true);
    }//GEN-LAST:event_addButtonActionPerformed

    private void ReductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReductButtonActionPerformed
     int selectedRow = jTable1.getSelectedRow();
    Connection connection = DatabaseManager.getConnection();
    int id = Integer.parseInt(jTable1.getValueAt(selectedRow, 0).toString());
    String type = jTable1.getValueAt(selectedRow, 3).toString();
    switch (type) {
        case "EmployeeRecord":
            EmployeeRecord employee_Record = new EmployeeRecord();
            EmployeeRecord employee_Record_get = employee_Record.getEmployeeRecordById(connection, id);
     
            NewDocument newDocument = new NewDocument(
                employee_Record_get.getNumber(),
                employee_Record_get.getDate(),
                type,
                employee_Record_get.getEmployeeName(),
                employee_Record_get.getPosition(),
                        id
            );
            newDocument.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            newDocument.setVisible(true);
            break;
        case "LegalContract":
            LegalContract legal_contract = new LegalContract();
            LegalContract legalContract_get = legal_contract.getLegalContractById(connection, id);
            NewDocument newDocument2 = new NewDocument(
                legalContract_get.getNumber(),
                legalContract_get.getDate(),
                type,
                legalContract_get.getCounterparty(),
                legalContract_get.getPurpose(),
                    id
            );
              newDocument2.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            newDocument2.setVisible(true);
            break;
        case "FinancialStatement":
            FinancialStatement finantial_statement = new FinancialStatement();
            FinancialStatement finantial_statement_get = finantial_statement.getFinancialStatementdById(connection, id);
            NewDocument newDocument3 = new NewDocument(
                finantial_statement_get.getNumber(),
                finantial_statement_get.getDate(),
                type,
                finantial_statement_get.getStatementType(),
                String.valueOf(finantial_statement_get.getAmount()),id
            );
              newDocument3.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            newDocument3.setVisible(true);
            break;
    }
    }//GEN-LAST:event_ReductButtonActionPerformed

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed
  String selectedItem = (String) type.getSelectedItem(); 
    DefaultTableModel model;
    Connection connection = DatabaseManager.getConnection();
    switch (selectedItem) {
        case "EmployeeRecord":
            EmployeeRecord employee_Record=new EmployeeRecord();
            model = employee_Record.getDocuments(connection);
            break;
        case "LegalContract":
              LegalContract legal_contract=new LegalContract();
            model = legal_contract.getDocuments(connection);
            break;
        case "FinancialStatement":
              FinancialStatement finantial_statement=new FinancialStatement();
            model = finantial_statement.getDocuments(connection);
            break;
        default:
            model = new DefaultTableModel(); 
            break;
    }
    jTable1.setModel(model); 
    }//GEN-LAST:event_typeActionPerformed

    private void search_by_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_numberActionPerformed
      
         String number=number_search.getText();
        String selectedItem = (String) type.getSelectedItem(); 
    DefaultTableModel model;
    Connection connection = DatabaseManager.getConnection();
    switch (selectedItem) {
         
        case "EmployeeRecord":
            EmployeeRecord employee_Record=new EmployeeRecord();
                if (number.isEmpty()) {
        
         model = employee_Record.getDocuments(connection);
    } 
                else{
           
            model = employee_Record.searchDocumentsByNumber(connection,number);
                }
            break;
        case "LegalContract":
               LegalContract legal_contract=new LegalContract();
              if (number.isEmpty()) {
        
         model = legal_contract.getDocuments(connection);
        
    } 
              else{
             
            model = legal_contract.searchDocumentsByNumber(connection,number);}
            break;
        case "FinancialStatement":
             FinancialStatement finantial_statement=new FinancialStatement();
            if (number.isEmpty()) {
        
         model = finantial_statement.getDocuments(connection);
      
    } else{
              model = finantial_statement.searchDocumentsByNumber(connection,number);
             
            }
           
            break;
        default:
            model = new DefaultTableModel();
            break;
    }
    jTable1.setModel(model);
    }//GEN-LAST:event_search_by_numberActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        String selectedItem = (String) type.getSelectedItem(); 
    DefaultTableModel model;
    Connection connection = DatabaseManager.getConnection();
    switch (selectedItem) {
        case "EmployeeRecord":
            EmployeeRecord employee_Record=new EmployeeRecord();
            model = employee_Record.getDocuments(connection);
            break;
        case "LegalContract":
              LegalContract legal_contract=new LegalContract();
            model = legal_contract.getDocuments(connection);
            break;
        case "FinancialStatement":
              FinancialStatement finantial_statement=new FinancialStatement();
            model = finantial_statement.getDocuments(connection);
            break;
        default:
            model = new DefaultTableModel(); 
            break;
    }
    jTable1.setModel(model); 
    }//GEN-LAST:event_updateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               DefaultTableModel model;
                    Main main = new Main();
            main.setVisible(true);
                 Connection connection=DatabaseManager.getConnection();
                 EmployeeRecord employee_Record=new EmployeeRecord();
                 model=employee_Record.getDocuments(connection);
                  main.jTable1.setModel(model);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ReductButton;
    private javax.swing.JButton addButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane number_search;
    private javax.swing.JButton search_by_number;
    private javax.swing.JComboBox<String> type;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
